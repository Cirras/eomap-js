(()=>{"use strict";const e=1,t=2,i=function(){let e=new Array(8);for(let t=0;t<8;++t){let i=1<<t+1,s=new Array(i);for(let e=0;e<i;++e)s[e]=Math.trunc(255*e/(i-1));e[t]=s}return e}(),s={Core:"BITMAPCOREHEADER",Info:"BITMAPINFOHEADER",V2:"BITMAPV2INFOHEADER",V3:"BITMAPV3INFOHEADER",V4:"BITMAPV4HEADER",V5:"BITMAPV5HEADER"},r=0,a=3;class h{constructor(e,t,i){this.b=e,this.g=t,this.r=i}}function n(e){return(e|=0)?31-Math.clz32(e&-e):0}class d{constructor(e){0===e&&(this.shift=0,this.mask=0,this.length=0),this.shift=n(e),this.mask=e>>this.shift,this.length=n(~this.mask)}read(e){return e=e>>this.shift&this.mask,i[this.length-1][e]}}class o{constructor(e,t,i,s){this.r=new d(e),this.g=new d(t),this.b=new d(i),this.a=new d(s)}}class l{constructor(e){this.data=e,this.dataView=new DataView(e),this.headerType=null,this.readLineStrategy=null,this.bitFields=null,this.paletteColors=null,this.initialized=!1}readUint8(e){return this.dataView.getUint8(e)}readUint16(e){return this.dataView.getUint16(e,!0)}readUint32(e){return this.dataView.getUint32(e,!0)}readInt32(e){return this.dataView.getInt32(e,!0)}get headerSize(){return this.readUint32(0)}get width(){return this.headerType===s.Core?this.readUint16(4):this.readInt32(4)}get height(){return this.headerType===s.Core?this.readUint16(6):this.readInt32(8)}get planes(){return this.headerType===s.Core?this.readUint16(8):this.readUint16(12)}get depth(){return this.headerType===s.Core?this.readUint16(10):this.readUint16(14)}get compression(){return this.headerType===s.Core?r:this.readUint32(16)}get colorsUsed(){return this.headerType===s.Core?0:this.readUint32(32)}get optionalBitMasksSize(){return this.headerType===s.Info&&this.compression==a?12:0}get paletteColorCount(){return this.depth<=8?this.colorsUsed||1<<this.depth:0}get paletteSize(){const e=this.headerType===s.Core?3:4;return this.paletteColorCount*e}get stride(){return(this.width*this.depth+31&-32)>>3}get hasBitMasks(){switch(this.headerType){case s.Core:return!1;case s.Info:return this.compression===a;default:return!0}}get redMask(){return this.hasBitMasks?this.readUint32(40):0}get greenMask(){return this.hasBitMasks?this.readUint32(44):0}get blueMask(){return this.hasBitMasks?this.readUint32(48):0}get alphaMask(){if(!this.hasBitMasks||this.headerType===s.V2)return 0;this.readUint32(52)}colorFromPalette(e){return this.initialize(),e>=this.paletteColors.length?this.colorFromPalette(0):this.paletteColors[e]}validateHeader(){if(this.dataView.byteLength<4||this.dataView.byteLength<this.headerSize)throw new Error("Truncated header");if(!Object.values(s).includes(this.headerType))throw new Error("Unknown header type with size ".concat(this.headerSize,"."));if(this.width<0)throw new Error("Image width less than zero");if(this.width>1073741824||this.height<-1073741824||this.height>1073741824)throw new Error("Image dimensions out of bounds");if(1!==this.planes)throw new Error("Invalid number of color planes (".concat(this.planes,")"));switch(this.depth){case 1:case 2:case 4:case 8:case 16:case 24:break;case 32:if(this.headerType===s.Core)throw new Error("32 is an invalid bit depth for ".concat(this.headerType));break;default:throw new Error("Unsupported bit depth")}if(this.compression!==r&&this.compression!==a)throw new Error("Unsupported compression");if(this.colorsUsed>1<<this.depth)throw new Error("Palette size ".concat(this.paletteColorCount," exceeds maximum value for ").concat(this.depth,"-bit image"))}validateBitFields(){if(this.bitFields){let e=255;if(this.bitFields.r.mask>e||this.bitFields.g.mask>e||this.bitFields.b.mask>e||this.bitFields.a.mask>e)throw new Error("Bit mask too long")}}determineHeaderType(){if(!(this.dataView.byteLength<4))switch(this.headerSize){case 12:this.headerType=s.Core;break;case 40:this.headerType=s.Info;break;case 52:this.headerType=s.V2;break;case 56:this.headerType=s.V3;break;case 108:this.headerType=s.V4;break;case 124:this.headerType=s.V5}}determineReadLineStrategy(){switch(this.depth){case 1:case 2:case 4:case 8:this.readLineStrategy=new p(this);break;case 16:case 24:case 32:this.readLineStrategy=new u(this);break;default:throw Error("Unhandled bit depth: ".concat(this.depth))}}decodeBitFields(){if(this.compression===a)this.bitFields=new o(this.redMask,this.greenMask,this.blueMask,this.alphaMask);else switch(this.depth){case 16:this.bitFields=new o(31744,992,31,0);break;case 24:case 32:this.bitFields=new o(16711680,65280,255,0)}}indexPalette(){if(this.compression===a)return;this.paletteColors=new Array(this.paletteColorCount);let e=this.headerSize+this.optionalBitMasksSize;for(let t=0;t<this.paletteColors.length;++t)this.paletteColors[t]=new h(this.readUint8(e++),this.readUint8(e++),this.readUint8(e++)),this.headerType!==s.Core&&e++}initialize(){this.initialized||(this.determineHeaderType(),this.validateHeader(),this.determineReadLineStrategy(),this.decodeBitFields(),this.validateBitFields(),this.indexPalette(),this.initialized=!0)}read(){this.initialize();const e=Math.abs(this.height);let t=new Uint8ClampedArray(this.width*e*4);for(let i=0;i<e;++i)this.readLineStrategy.read(t,i);return t}}class c{constructor(e){this.reader=e,this.width=this.reader.width,this.height=this.reader.height}read(e,t){const i=this.height<0?t:this.height-1-t,s=this.width*t*4,r=this.reader.headerSize+this.reader.optionalBitMasksSize+this.reader.paletteSize+this.reader.stride*i;this.readLine(e,s,r)}readLine(e,t,i){throw new Error("ReadLineStrategy.readLine() must be implemented")}getAlpha(e,t,i){return 0!==e||0!==t||0!==i?255:0}}class u extends c{constructor(e){super(e),this.bytesPerPixel=this.reader.depth>>3}readLine(e,t,i){for(let s=0;s<this.width;++s){let s=0,r=0,a=0,h=this.readUint32WithZeroPadding(i);s=this.bitFields.r.read(h),r=this.bitFields.g.read(h),a=this.bitFields.b.read(h),e[t++]=s,e[t++]=r,e[t++]=a,e[t++]=this.getAlpha(s,r,a),i+=this.bytesPerPixel}}readUint32WithZeroPadding(e){if(e+4<=this.reader.dataView.byteLength)return this.reader.readUint32(e);let t=new Uint8Array([0,0,0,0]);for(let i=0;i<t.length&&!(e>=this.reader.dataView.byteLength);++i)t[i]=this.reader.readUint8(e++);return new DataView(t.buffer).getUint32(0,!0)}get bitFields(){return this.reader.bitFields}}class p extends c{constructor(e){super(e),this.pixelsPerByte=8/this.reader.depth,this.bytesPerLine=Math.ceil(this.width/this.pixelsPerByte),this.getPaletteIndices=p.createGetPaletteIndices(this.reader.depth)}static createGetPaletteIndices(e){switch(e){case 1:return e=>{let t=new Array(8);for(let i=0;i<8;++i)t[7-i]=(e&1<<i)>>i;return t};case 2:return e=>[(192&e)>>6,(48&e)>>4,(12&e)>>2,3&e];case 4:return e=>[(240&e)>>4,15&e];case 8:return e=>[e];default:throw Error("Unhandled bit depth: ".concat(e))}}readLine(e,t,i){let s=0;for(let r=0;r<this.bytesPerLine;++r){const r=this.readUint8WithZeroPadding(i),a=this.getPaletteIndices(r);for(let i of a){const r=this.reader.colorFromPalette(i),{b:a,g:h,r:n}=r;if(e[t++]=n,e[t++]=h,e[t++]=a,e[t++]=this.getAlpha(n,h,a),++s===this.width)return}++i}}readUint8WithZeroPadding(e){return e<this.reader.dataView.byteLength?this.reader.readUint8(e):0}}const f=2;class w{constructor(e,t){this.resourceType=e,this.subdirectoryOffset=t}}class y{constructor(e,t,i,s){this.offset=e,this.size=t,this.codePage=i,this.unused=s}}class g{constructor(e,t,i,s){this.start=e,this.size=t,this.width=i,this.height=s}}class b{constructor(e){this.file=e,this.dataView=new DataView(e),this.position=0,this.virtualAddress=0,this.rootAddress=0,this.bitmapDirectoryEntry=new w,this.resourceInfo=new Map,this.readHeader(),this.readBitmapTable()}seek(e){this.position=e}skip(e){this.position+=e}readUint16(){let e=this.dataView.getUint16(this.position,!0);return this.position+=2,e}readUint32(){let e=this.dataView.getUint32(this.position,!0);return this.position+=4,e}readInt32(){let e=this.dataView.getInt32(this.position,!0);return this.position+=4,e}readString(e){let t=new TextDecoder("utf-8").decode(new Uint8Array(this.file.slice(this.position,this.position+e)));return this.position+=e,t}readDirectoryEntryCount(){return this.skip(12),this.readUint16()+this.readUint16()}readResourceDirectoryEntry(){let e=this.readUint32(),t=this.readUint32();return new w(e,t)}readResourceDataEntry(){let e=this.readUint32(),t=this.readUint32(),i=this.readUint32(),s=this.readUint32();return new y(e,t,i,s)}readHeader(){this.seek(60);let e=this.readUint16();if(this.skip(e-60-2),"PE\0\0"!==this.readString(4))throw new Error("Invalid PE file signature");this.skip(2);let t=this.readUint16();this.skip(128),this.virtualAddress=this.readUint32(),this.skip(120);for(let e=0;e<t;++e){if(this.readUint32()==this.virtualAddress){this.skip(4),this.rootAddress=this.readUint32();break}this.skip(36)}if(0==this.rootAddress)throw new Error("Invalid root address");this.seek(this.rootAddress);let i=this.readDirectoryEntryCount();for(let e=0;e<i;++e){let e=this.readResourceDirectoryEntry();if(e.resourceType===f)return this.bitmapDirectoryEntry=e,void(this.bitmapDirectoryEntry.subdirectoryOffset-=2147483648)}throw new Error("Missing bitmap resource directory")}readBitmapTable(){this.seek(this.rootAddress+this.bitmapDirectoryEntry.subdirectoryOffset);let e=this.readDirectoryEntryCount(),t=new Array;for(let i=0;i<e;++i){let e=this.readResourceDirectoryEntry();e.subdirectoryOffset>2147483648&&(e.subdirectoryOffset-=2147483648,t.push(e))}for(let e of t){this.seek(this.rootAddress+e.subdirectoryOffset+20);let t=this.readUint32();this.seek(this.rootAddress+t);let i,s,r=this.readResourceDataEntry(),a=r.offset-this.virtualAddress+this.rootAddress,h=r.size;this.seek(a),12===this.readUint32()?(i=this.readUint16(),s=this.readUint16()):(i=Math.abs(this.readInt32()),s=Math.abs(this.readInt32())),this.resourceInfo.set(e.resourceType,new g(a,h,i,s))}}getResourceIDs(){return this.resourceInfo.keys()}getResourceInfo(e){let t=this.resourceInfo.get(e);return t||(t=null),t}readResource(e){return this.file.slice(e.start,e.start+e.size)}}self.egfs=new Map,self.loadDIB=function(e){try{let i=egfs.get(e.fileID);if(i){let s=i.getResourceInfo(e.resourceID);if(s){let r=i.readResource(s),a=new l(r).read();postMessage({loadType:t,fileID:e.fileID,resourceID:e.resourceID,pixels:a.buffer},[a.buffer])}}}catch(i){postMessage({loadType:t,fileID:e.fileID,resourceID:e.resourceID,error:i})}},self.loadEGF=function(t){try{if(egfs.has(t.fileID))throw new Error("EGF ".concat(t.fileID," was already loaded."));let i=new b(t.buffer);egfs.set(t.fileID,i),postMessage({loadType:e,fileID:t.fileID,resourceInfo:i.resourceInfo})}catch(i){postMessage({loadType:e,fileID:t.fileID,error:i})}},onmessage=function(i){let s=i.data;switch(s.loadType){case t:loadDIB(s);break;case e:loadEGF(s);break;default:throw new Error("Unhandled LoadType: ".concat(s.loadType))}}})();
//# sourceMappingURL=bundle.min.worker.js.map